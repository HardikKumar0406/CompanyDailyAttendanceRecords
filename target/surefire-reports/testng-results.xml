<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-02T17:50:24 IST" name="Surefire suite" finished-at="2025-07-02T17:51:23 IST" duration-ms="58493">
    <groups>
    </groups>
    <test started-at="2025-07-02T17:50:24 IST" name="Surefire test" finished-at="2025-07-02T17:51:23 IST" duration-ms="58493">
      <class name="attendanceTests.AccessControlTests">
        <test-method signature="testAccessGrantedRecordsRetrieval()[pri:0, instance:attendanceTests.AccessControlTests@255b53dc]" started-at="2025-07-02T17:50:24 IST" name="testAccessGrantedRecordsRetrieval" description="Verify user can export attendance record and send it via email" finished-at="2025-07-02T17:51:23 IST" duration-ms="58426" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Email was not sent successfully! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Email was not sent successfully! expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at attendanceTests.AccessControlTests.testAccessGrantedRecordsRetrieval(AccessControlTests.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccessGrantedRecordsRetrieval -->
      </class> <!-- attendanceTests.AccessControlTests -->
      <class name="baseTestFile.BaseTests">
        <test-method is-config="true" signature="globalSetUp()[pri:0, instance:baseTestFile.BaseTests@429bd883]" started-at="2025-07-02T17:50:17 IST" name="globalSetUp" finished-at="2025-07-02T17:50:24 IST" duration-ms="7726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetUp -->
        <test-method is-config="true" signature="globalTearDown()[pri:0, instance:baseTestFile.BaseTests@429bd883]" started-at="2025-07-02T17:51:23 IST" name="globalTearDown" finished-at="2025-07-02T17:51:23 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTearDown -->
      </class> <!-- baseTestFile.BaseTests -->
      <class name="attendanceTests.LoginTests">
        <test-method signature="verifyAccessControlMenuVisibleAfterLogin()[pri:0, instance:attendanceTests.LoginTests@6ee12bac]" started-at="2025-07-02T17:51:23 IST" name="verifyAccessControlMenuVisibleAfterLogin" description="Verify Access Control menu is visible after successful login" finished-at="2025-07-02T17:51:23 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAccessControlMenuVisibleAfterLogin -->
      </class> <!-- attendanceTests.LoginTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
